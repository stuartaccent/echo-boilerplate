version: '3'

vars:
  CONFIG: config.dev.toml
  MIGRATIONS: pkg/storage/db/migrations
  CSS_IN: pkg/ui/css/global.css
  CSS_OUT: pkg/static/public/css/global.css
  JS_IN: pkg/ui/js
  JS_OUT: pkg/static/public/js

tasks:
  setup:config:
    desc: "Copy the base config.toml to the development config file."
    cmds:
      - cp config.toml {{.CONFIG}}

  setup:tooling:
    desc: "Install necessary Go tools and dependencies."
    cmds:
      - go mod download
      - go mod tidy

  air:
    desc: "Run the Air live reload server."
    deps:
      - task: setup:tooling
    cmds:
      - go tool air

  gen:sqlc:
    desc: "Generate Go code from SQL queries using sqlc."
    cmds:
      - go tool sqlc generate

  gen:templ:
    desc: "Generate code from templates using templ."
    cmds:
      - go tool templ generate

  gen:tailwind:
    desc: "Process CSS files with Tailwind CSS in watch mode with minification."
    cmds:
      - ./tmp/tailwindcss -i {{.CSS_IN}} -o {{.CSS_OUT}} --watch --minify

  gen:esbuild:
    desc: "Build the ui JavaScript files with esbuild."
    deps:
      - task: gen:esbuild:file
        vars: { IN: '{{.JS_IN}}/htmx.js', OUT: '{{.JS_OUT}}/htmx.js' }

  gen:esbuild:file:
    desc: "Build a single file with esbuild."
    vars:
      IN: '{{default "" .IN}}'
      OUT: '{{default "" .OUT}}'
    cmds:
      - go tool esbuild {{.IN}} --bundle --outfile={{.OUT}} --minify --watch

  gen:svelte:
    desc: "Build Svelte components with esbuild."
    cmds:
      - npm run svelte:build

  migrate:add:
    desc: "Create a new database migration file."
    vars:
      SEQ: '{{default "initial" .SEQ}}'
    cmds:
      - go tool migrate create -ext sql -dir {{.MIGRATIONS}} -seq "{{.SEQ}}"

  migrate:up:
    desc: "Apply all migrations to the database."
    cmds:
      - go run . migrate --config {{.CONFIG}} up

  migrate:down:
    desc: "Revert all migrations to the database."
    cmds:
      - go run . migrate --config {{.CONFIG}} down

  dev:fmt:
    desc: "Format Go code according to the standard Go style."
    cmds:
      - go tool templ fmt .
      - gofmt -l -w .

  dev:vet:
    desc: "Examine Go source code and report suspicious constructs."
    cmds:
      - go vet ./...

  dev:static:
    desc: "Perform advanced static analysis using staticcheck."
    cmds:
      - go tool staticcheck ./...

  dev:lintci:
    desc: "Run golangci-lint to execute multiple linters."
    cmds:
      - go tool golangci-lint run ./...

  dev:vuln:
    desc: "Scan for known vulnerabilities in dependencies using govulncheck."
    cmds:
      - go tool govulncheck ./...

  dev:sec:
    desc: "Check for common security issues with gosec."
    cmds:
      - go tool gosec ./...

  dev:lint:
    desc: "Run all linting and security analysis tools."
    cmds:
      - task: dev:vet
      - task: dev:static
      - task: dev:lintci
      - task: dev:vuln
      - task: dev:sec
